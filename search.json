[{"path":"https://matthewleewilcox.github.io/eliteformR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Matthew Wilcox Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/articles/get-max.html","id":"set-up-api-token","dir":"Articles","previous_headings":"","what":"Set up API Token","title":"Getting Player Max's","text":"code set API Token. Please reference Get Started Guide.","code":"# Load the eliteformR package library(eliteformR)  API_key <- \"YOUR-API-KEY-HERE\" URL <- \"https://your_team_url_eliteform.com\"  token <- EF_CreateAPIToken(URL, API_key)  # Download Team List team_list_df <- EF_GetTeamsList(token)  # Update the Token with the Selected Team ID # TeamId should be as.numeric() token <- EF_UpdateTokenTeam(token, team_list_df$TeamId[1]) # or  # token <- EF_UpdateTokenTeam(token, 111)"},{"path":"https://matthewleewilcox.github.io/eliteformR/articles/get-max.html","id":"get-teams-current-1-rep-max","dir":"Articles","previous_headings":"","what":"Get Team’s Current 1 Rep Max","title":"Getting Player Max's","text":"gather Team’s current 1 rep maxes, require just token.","code":"Team1RepMax_df <- EF_Get1RMs(token)  Team1RepMax_df  #           Date AthleteId     LastName FirstName    Exercise Result # 1     6/8/2023      4342       Player         1       SQUAT    450 # 2     5/8/2023      4342       Player         1 POWER CLEAN    302 # 3    7/12/2023      4342       Player         1 BENCH PRESS    356 # 4    5/28/2024      4343       Player         2       SQUAT    100 # 5    5/28/2024      4343       Player         2 POWER CLEAN    100 # 6    5/28/2024      4343       Player         2 BENCH PRESS    100 # 7    7/27/2025      4344       Player         3       SQUAT    360 # 8    5/27/2025      4344       Player         3 POWER CLEAN    314 # 9    7/29/2025      4344       Player         3 BENCH PRESS    320"},{"path":"https://matthewleewilcox.github.io/eliteformR/articles/get-max.html","id":"get-teams-current-power-1-rep-max","dir":"Articles","previous_headings":"","what":"Get Team’s Current Power 1 Rep Max","title":"Getting Player Max's","text":"gather Team’s current power 1 rep maxes, require just token.","code":"Power.Team1RepMax_df <- EF_GetPower1RMs(token)  Power.Team1RepMax_df  #           Date AthleteId     LastName FirstName    Exercise Result # 1     6/8/2023      4342       Player         1       SQUAT    450 # 2     5/8/2023      4342       Player         1 POWER CLEAN    302 # 3    7/12/2023      4342       Player         1 BENCH PRESS    356 # 4    5/28/2024      4343       Player         2       SQUAT    100 # 5    5/28/2024      4343       Player         2 POWER CLEAN    100 # 6    5/28/2024      4343       Player         2 BENCH PRESS    100 # 7    7/27/2025      4344       Player         3       SQUAT    360 # 8    5/27/2025      4344       Player         3 POWER CLEAN    314 # 9    7/29/2025      4344       Player         3 BENCH PRESS    320"},{"path":"https://matthewleewilcox.github.io/eliteformR/articles/get-reps-and-sets.html","id":"set-up-api-token","dir":"Articles","previous_headings":"","what":"Set up API Token","title":"Getting all Reps and Sets","text":"code set API Token. Please reference Get Started Guide.","code":"# Load the eliteformR package library(eliteformR)  API_key <- \"YOUR-API-KEY-HERE\" URL <- \"https://your_team_url_eliteform.com\"  token <- EF_CreateAPIToken(URL, API_key)  # Download Team List team_list_df <- EF_GetTeamsList(token)  # Update the Token with the Selected Team ID # TeamId should be as.numeric() token <- EF_UpdateTokenTeam(token, team_list_df$TeamId[1]) # or  # token <- EF_UpdateTokenTeam(token, 111)"},{"path":"https://matthewleewilcox.github.io/eliteformR/articles/get-reps-and-sets.html","id":"get-all-sets","dir":"Articles","previous_headings":"","what":"Get All Sets","title":"Getting all Reps and Sets","text":"can get sets team specified date. can use command EF_GetAllSets() just incldue token like get sets including paperless current date. specifiy date include “date =” argument date string formats: “%m/%d/%Y”, “%m-%d-%Y”, “%m%d%Y”, “%Y/%m/%d”, “%Y-%m-%d”, “%Y%m%d”. Finally want includepaperless, set “includePaperless =” arguemnt 0. default yes nothing include instead manually set use selecting “includePaperless = 1”","code":"# Get All Sets # Defaults to the current date and to include paperless if only including Token all_sets_df <- EF_GetAllSets(token)  # Get All sets on Date. Date can be in any of these formats \"%m/%d/%Y\", \"%m-%d-%Y\", \"%m%d%Y\", \"%Y/%m/%d\", \"%Y-%m-%d\", \"%Y%m%d\" all_sets_df <-EF_GetAllSets(token, \"07/22/2025\")  # Get All sets on a date, not including Paperless. the includePaperless varaible must either be 1 for yes, 0 for no or omited from the function.  all_sets_df <-EF_GetAllSets(token, \"07/22/2025\", includePaperless = 0)  all_sets_df  #    AverageVelocity PeakVelocity AveragePower PeakPower      Date             Time AthleteId     LastName FirstName    Exercise SetNumber RepsAssigned RepsCompleted LoadFactor ActualWeight ActualRest ReactionTimeInMS    Work # 1         0.471111     0.921111     650.2178 1266.5467 7/22/2025 11:41:13.6319597      1111       Player         1 BENCH PRESS         5            1             9      0.875          310        353                0 7107.65 # 2         0.465000     1.423333     556.4000 1710.5250 7/22/2025 11:40:26.4072519      1112       Player         2 BENCH PRESS         5            1             6      0.875          270        384                0 3652.91 # 3         0.360000     0.748571     559.8743 1164.8600 7/22/2025 11:39:37.1249414      1113       Player         3 BENCH PRESS         5            1             7      0.875          350        239                0 5641.98 # 4         0.425000     1.268333     634.3500 1889.9683 7/22/2025 11:39:36.0497881      1114       Player         4 BENCH PRESS         5            1             6      0.875          335        299                0 5150.81 # 5         0.432857     0.895714     547.7771 1134.5086 7/22/2025 11:39:33.7107749      1115       Player         5 BENCH PRESS         5            1             7      0.875          285        344                0 4153.00 # 6         0.440000     1.023333     715.0000 1658.9800 7/22/2025 11:39:29.0596346      1116       Player         6 BENCH PRESS         5            1             3      0.875          365        210                0 2646.26"},{"path":"https://matthewleewilcox.github.io/eliteformR/articles/get-reps-and-sets.html","id":"get-all-reps","dir":"Articles","previous_headings":"","what":"Get All Reps","title":"Getting all Reps and Sets","text":"want get reps team performs single day, two functions choose . EF_GetAllTrackedReps() base function gets reps specific date. want include fields provided EF Data Points Report already available EF_GetAllTrackedReps(), use function EF_GetAllTrackedReps3(). Like getting sets, specifiy date include “date =” argument date string formats: “%m/%d/%Y”, “%m-%d-%Y”, “%m%d%Y”, “%Y/%m/%d”, “%Y-%m-%d”, “%Y%m%d”. date provided default current date.","code":"# Get all Reps # Defaults to Current Date  all_reps_df <- EF_GetAllTrackedReps(token) all_reps_df <- EF_GetAllTrackedReps(token, date = \"07/22/2025\")  #       Exercise      Date             Time AthleteId    LastName FirstName SetNumber RepNumber LoadFactor ActualWeight AverageVelocity PeakVelocity AveragePower PeakPower ActualRest ReactionTimeInMS   Work # 1  BENCH PRESS 7/22/2025 11:41:13.6319597      1111      Player         1         5         9      0.875          310            0.21         0.82       282.89   1124.43          0                0 792.81 # 2  BENCH PRESS 7/22/2025 11:41:13.6319597      1111      Player         1         5         8      0.875          310            0.38         0.95       530.71   1306.43          0                0 768.80 # 3  BENCH PRESS 7/22/2025 11:41:13.6319597      1111      Player         1         5         7      0.875          310            0.30         0.87       413.66   1194.80          0                0 773.77 # 4  BENCH PRESS 7/22/2025 11:41:13.6319597      1111      Player         1         5         6      0.875          310            0.50         0.98       684.19   1350.46          0                0 809.33 # 5  BENCH PRESS 7/22/2025 11:41:13.6319597      1111      Player         1         5         5      0.875          310            0.55         0.98       760.02   1346.51          0                0 803.10 # 6  BENCH PRESS 7/22/2025 11:41:13.6319597      1111      Player         1         5         4      0.875          310            0.57         0.99       783.23   1361.53          0                0 786.19    # Get all Reps including variables in EF Data Points Report # Defaults to Current Date all_reps3_df <- EF_GetAllTrackedReps3(token) all_reps3_df <- EF_GetAllTrackedReps3(token, date = \"07/22/2025\")  #   TrackerClassificationId ExerciseId                   ExerciseName TimeToPeak TargetValue TargetValueMax      TargetMetric Duration EccentricAvgVelocity EccentricAvgPower EccentricPeakVelocity EccentricPeakPower EccentricDuration # 1                        3      11191                    BENCH PRESS       0.21        0.28           0.38 AvgVelocity (m/s)     0.99                 0.36            475.02                  0.73             964.27              1.32 # 2                        3      11191                    BENCH PRESS       0.21        0.28           0.38 AvgVelocity (m/s)     1.10                 0.52            708.94                  0.82            1115.92              0.89 # 3                        3      11191                    BENCH PRESS       0.22        0.28           0.38 AvgVelocity (m/s)     1.19                 0.46            624.05                  0.92            1247.06              1.15 # 4                        3      11191                    BENCH PRESS       0.18        0.28           0.38 AvgVelocity (m/s)     1.24                 0.47            644.33                  1.02            1381.12              1.11 # 5                        3      11191                    BENCH PRESS       0.19        0.28           0.38 AvgVelocity (m/s)     1.69                 0.53            720.31                  1.00            1356.94              0.97 # 6                        3      11191                    BENCH PRESS       0.16        0.28           0.38 AvgVelocity (m/s)     1.36                 0.21            290.01                  0.83            1121.86              2.31  #         Date             Time AthleteId     LastName FirstName SetNumber RepNumber LoadFactor ActualWeight AverageVelocity PeakVelocity AveragePower PeakPower ActualRest ReactionTimeInMS   Work # 1  7/22/2025 08:28:42.7786335      1111       Player         1         4         1      0.825          295            0.52         0.79       684.42   1035.43        135                0 678.65 # 2  7/22/2025 08:33:39.9767364      1111       Player         1         5         1      0.875          305            0.47         0.83       643.70   1122.28        247                0 710.41 # 3  7/22/2025 08:33:39.9767364      1111       Player         1         5         2      0.875          305            0.44         0.78       601.60   1052.62        247                0 715.00 # 4  7/22/2025 08:33:39.9767364      1111       Player         1         5         3      0.875          305            0.43         0.85       586.30   1149.30        247                0 727.66 # 5  7/22/2025 08:33:39.9767364      1111       Player         1         5         4      0.875          305            0.33         0.91       450.97   1239.65        247                0 764.16 # 6  7/22/2025 08:33:39.9767364      1111       Player         1         5         5      0.875          305            0.41         0.74       551.04   1010.33        247                0 750.84"},{"path":"https://matthewleewilcox.github.io/eliteformR/articles/getting-started.html","id":"downloading-package","dir":"Articles","previous_headings":"","what":"Downloading Package","title":"Getting Started","text":"download eliteformR package, either go eliteformR Github Repo use devtools seen :","code":"# Install from GitHub # install.packages(\"devtools\") devtools::install_github(\"MatthewLeeWilcox/eliteformR\")"},{"path":"https://matthewleewilcox.github.io/eliteformR/articles/getting-started.html","id":"starting-to-use-eliteformr","dir":"Articles","previous_headings":"","what":"Starting to use eliteformR","title":"Getting Started","text":"Now Token updated selected Team Id, can begin running many functions. example provided get’s sets particular day:","code":"# Load the eliteformR package library(eliteformR) # Get all Sets (Defaulted to Current Date and Paperless) all_sets_df <- EF_GetAllSets(token)  # Get all sets for a specified date  all_sets_df <- EF_GetAllSets(token, \"07/22/2025\")  all_sets_df  # AverageVelocity PeakVelocity AveragePower PeakPower      Date             Time AthleteId    LastName FirstName # 1        0.471111     0.921111     530.2178  1556.547 7/22/2025 11:41:13.6319597      4346     Athlete       1 # 2        0.465000     1.423333     623.4000  1640.525 7/22/2025 11:40:26.4072519      5232     Athlete       2 # 3        0.360000     0.748571     705.8743  1544.860 7/22/2025 11:39:37.1249414      6750     Athlete       3 # 4        0.425000     1.268333     548.3500  1929.968 7/22/2025 11:39:36.0497881      4233     Athlete       4 # 5        0.432857     0.895714     568.7771  1444.509 7/22/2025 11:39:33.7107749      4246     Athlete       5 # 6        0.440000     1.023333     668.0000  1738.980 7/22/2025 11:39:29.0596346      6744     Athlete       6 #      Exercise SetNumber RepsAssigned RepsCompleted LoadFactor ActualWeight ActualRest ReactionTimeInMS    Work # 1 BENCH PRESS         5            1             9      0.875          310        353                0 7407.65 # 2 BENCH PRESS         5            1             6      0.875          270        384                0 3552.91 # 3 BENCH PRESS         5            1             7      0.875          350        239                0 5741.98 # 4 BENCH PRESS         5            1             6      0.875          335        299                0 5850.81 # 5 BENCH PRESS         5            1             7      0.875          285        344                0 4253.00 # 6 BENCH PRESS         5            1             3      0.875          365        210                0 2546.26  # Get all Sets for a specific date and Not Paperless  all_sets_df <- EF_GetAllSets(token, \"07/22/2025\", includePaperless = 0)  all_sets_df  #   AverageVelocity PeakVelocity AveragePower PeakPower      Date             Time AthleteId    LastName FirstName    Exercise SetNumber RepsAssigned RepsCompleted # 1        0.471111     0.921111     650.2178  1266.547 7/22/2025 11:41:13.6319597      4346     Athlete         1 BENCH PRESS         5            1             9 # 2        0.465000     1.423333     556.4000  1710.525 7/22/2025 11:40:26.4072519      5232     Athlete         2 BENCH PRESS         5            1             6 # 3        0.360000     0.748571     559.8743  1164.860 7/22/2025 11:39:37.1249414      6750     Athlete         3 BENCH PRESS         5            1             7 # 4        0.425000     1.268333     634.3500  1889.968 7/22/2025 11:39:36.0497881      4233     Athlete         4 BENCH PRESS         5            1             6 # 5        0.432857     0.895714     547.7771  1134.509 7/22/2025 11:39:33.7107749      4246     Athlete         5 BENCH PRESS         5            1             7 # 6        0.440000     1.023333     715.0000  1658.980 7/22/2025 11:39:29.0596346      6744     Athlete         6 BENCH PRESS         5            1             3 #   LoadFactor ActualWeight ActualRest ReactionTimeInMS    Work # 1      0.875          310        353                0 7107.65 # 2      0.875          270        384                0 3652.91 # 3      0.875          350        239                0 5641.98 # 4      0.875          335        299                0 5150.81 # 5      0.875          285        344                0 4153.00 # 6      0.875          365        210                0 2646.26"},{"path":"https://matthewleewilcox.github.io/eliteformR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Wilcox. Author, maintainer.","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wilcox M (2025). eliteformR: eliteformR. R package version 0.1.0, https://github.com/MatthewLeeWilcox/eliteformR.","code":"@Manual{,   title = {eliteformR: eliteformR},   author = {Matthew Wilcox},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/MatthewLeeWilcox/eliteformR}, }"},{"path":"https://matthewleewilcox.github.io/eliteformR/index.html","id":"eliteformr-","dir":"","previous_headings":"","what":"eliteformR","title":"eliteformR","text":"Get set’s max’s form EliteForm API eliteformR R packaged designed provide easy interfacing EliteForm API. EliteForm account required utilize package.","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"eliteformR","text":"can install version 0.1.0 elieteformR Github :","code":"# Install from GitHub # install.packages(\"devtools\") devtools::install_github(\"MatthewLeeWilcox/eliteformR\")"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_CreateAPIToken.html","id":null,"dir":"Reference","previous_headings":"","what":"Elite Form API Login — EF_CreateAPIToken","title":"Elite Form API Login — EF_CreateAPIToken","text":"Implements Elite Form's Login using “X-ApiKey” custom Elite Form URL","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_CreateAPIToken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elite Form API Login — EF_CreateAPIToken","text":"","code":"EF_CreateAPIToken(url, api_key)"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_CreateAPIToken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elite Form API Login — EF_CreateAPIToken","text":"url URL string api_key X-ApiKey string","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_CreateAPIToken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Elite Form API Login — EF_CreateAPIToken","text":"Returns S4 Object saves X-ApiKey URL acts token later pulls","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_CreateAPIToken.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elite Form API Login — EF_CreateAPIToken","text":"","code":"# Create an API token with your EliteForm URL and API key token <- EF_CreateAPIToken(\"https://your.eliteform.com\", \"your-api-key\")  # Access components of the token token@url #> [1] \"https://your.eliteform.com\" token@api_key #> [1] \"your-api-key\""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_Get1RMs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all 1 Rep Max for Entire Team — EF_Get1RMs","title":"Get all 1 Rep Max for Entire Team — EF_Get1RMs","text":"Get current 1RMs team","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_Get1RMs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all 1 Rep Max for Entire Team — EF_Get1RMs","text":"","code":"EF_Get1RMs(token)"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_Get1RMs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all 1 Rep Max for Entire Team — EF_Get1RMs","text":"token API Token Object (see EF_CreateAPIToken)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_Get1RMs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all 1 Rep Max for Entire Team — EF_Get1RMs","text":"Returns data frame following columns: Date `character` — Date record (MM-DD-YYYY format) AthleteId `numeric` — Unique athlete identifier (long) LastName `character` — Athlete's last name FirstName `character` — Athlete's first name Exercise `character` — Name exercise performed Result `numeric` — Recorded result output metric","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllSets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all Sets — EF_GetAllSets","title":"Get all Sets — EF_GetAllSets","text":"NOTE: 1 sets includePaperless true, 0 sets false. don’t specify reportDate, current date used. don’t specify includePaperless, option set true.","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllSets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all Sets — EF_GetAllSets","text":"","code":"EF_GetAllSets(token, date = \"\", includePaperless = \"\")"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllSets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all Sets — EF_GetAllSets","text":"token API Token Object (see EF_CreateAPIToken) date Input date string format \"%m-%d-%Y\" (e.g., \"07-28-2025\").","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllSets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all Sets — EF_GetAllSets","text":"Returns data frame following columns: Date `character` — Date lift (MM-DD-YYYY format) Time `character` — Time lift performed (HH:MM) AthleteId `numeric` — Unique athlete identifier (long) LastName `character` — Athlete's last name FirstName `character` — Athlete's first name Exercise `character` — Name exercise performed SetNumber `integer` — Set number within session RepsAssigned `integer` — Number repetitions assigned RepsCompleted `integer` — Number repetitions completed LoadFactor `numeric` — Load factor used lift ActualWeight `numeric` — Actual weight lifted (kg) AverageVelocity `numeric` — Average bar velocity (m/s) PeakVelocity `numeric` — Peak bar velocity (m/s) AveragePower `numeric` — Average power output (W) PeakPower `numeric` — Peak power output (W) ActualRest `integer` — Rest duration lift (seconds) ReactionTimeInMS `integer` — Reaction time lift initiation (milliseconds) Work `numeric` — Total work performed rep (Joules)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllSets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all Sets — EF_GetAllSets","text":"Get sets team specific date","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Tracked Reps — EF_GetAllTrackedReps","title":"Get All Tracked Reps — EF_GetAllTrackedReps","text":"Get tracked reps team specific date. don’t specify `reportDate`, current date used.","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Tracked Reps — EF_GetAllTrackedReps","text":"","code":"EF_GetAllTrackedReps(token, date = \"\")"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Tracked Reps — EF_GetAllTrackedReps","text":"token API Token Object (see EF_CreateAPIToken) date Input date string format \"%m-%d-%Y\" (e.g., \"07-28-2025\").","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Tracked Reps — EF_GetAllTrackedReps","text":"Returns data frame following columns: Date `character` — Date lift (MM-DD-YYYY format) Time `character` — Time lift performed (HH:MM) AthleteId `numeric` — Unique athlete identifier LastName `character` — Athlete's last name FirstName `character` — Athlete's first name Exercise `character` — Name exercise performed Reps `integer` — Number repetitions tracked PeakVelocity `numeric` — Peak bar velocity (m/s)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get All Tracked Reps — EF_GetAllTrackedReps","text":"don’t specify reportDate, current date used.(results include lifts entered Paperless. Paperless results, use EF_GetAllSets includePaperless set.)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps3.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Tracked Reps — EF_GetAllTrackedReps3","title":"Get All Tracked Reps — EF_GetAllTrackedReps3","text":"Get tracked reps team specific data","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Tracked Reps — EF_GetAllTrackedReps3","text":"","code":"EF_GetAllTrackedReps3(token, date = \"\")"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Tracked Reps — EF_GetAllTrackedReps3","text":"token API Token Object (see EF_CreateAPIToken) date Input date string format \"%m-%d-%Y\" (e.g., \"07-28-2025\").","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Tracked Reps — EF_GetAllTrackedReps3","text":"Returns data frame following columns: Date `character` — Date lift (MM-DD-YYYY format) Time `character` — Time lift performed (HH:MM) AthleteId `numeric` — Unique athlete identifier (long) LastName `character` — Athlete's last name FirstName `character` — Athlete's first name Exercise `character` — Name exercise performed SetNumber `integer` — Set number within session RepNumber `integer` — Repetition number within set LoadFactor `numeric` — Load factor used lift ActualWeight `numeric` — Actual weight lifted (kg) AverageVelocity `numeric` — Average bar velocity (m/s) PeakVelocity `numeric` — Peak bar velocity (m/s) AveragePower `numeric` — Average power output (W) PeakPower `numeric` — Peak power output (W) ActualRest `integer` — Rest duration lift (seconds) ReactionTimeInMS `integer` — Reaction time milliseconds Work `numeric` — Total work performed (Joules) TrackerClassificationId `integer` — Internal classification ID ExerciseId `integer` — Internal exercise identifier ExerciseName `character` — Full name exercise TimeToPeak `numeric` — Time reach peak velocity (s) TargetValue `numeric` — Target value set rep TargetMetric `character` — Unit type target metric Duration `numeric` — Total duration rep (s) EccentricAvgVelocity `numeric` — Average eccentric velocity (m/s) EccentricAvgPower `numeric` — Average eccentric power (W) EccentricPeakVelocity `numeric` — Peak eccentric velocity (m/s) EccentricPeakPower `numeric` — Peak eccentric power (W) EccentricDuration `numeric` — Duration eccentric phase (s)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAllTrackedReps3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get All Tracked Reps — EF_GetAllTrackedReps3","text":"NOTE: call includes fields provided EF Data Points reports available EF_GetAllTrackedReps don’t specify reportDate, current date used. (results include lifts entered Paperless. Paperless results, use GetAllSets includePaperless set.) don’t specify reportDate, current date used.(results include lifts entered Paperless. Paperless results, use EF_GetAllSets includePaperless set.)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAthleteInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all Player Info for entire team — EF_GetAthleteInfo","title":"Get all Player Info for entire team — EF_GetAthleteInfo","text":"Get basic information athletes team","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAthleteInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all Player Info for entire team — EF_GetAthleteInfo","text":"","code":"EF_GetAthleteInfo(token, date = \"\")"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAthleteInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all Player Info for entire team — EF_GetAthleteInfo","text":"token API Token Object (see EF_CreateAPIToken) date Input date string format \"%m-%d-%Y\" (e.g., \"07-28-2025\").","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetAthleteInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all Player Info for entire team — EF_GetAthleteInfo","text":"Returns data frame following columns: AthleteId `numeric` — Unique athlete identifier (long) LastName `character` — Athlete's last name FirstName `character` — Athlete's first name Positions `character` — Athlete's playing position(s) Classification `character` — Athlete's roster classification (e.g., Freshman, Senior) Categories `character` — Custom predefined grouping categories (e.g., Returners, Injured)","code":""},{"path":[]},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetPower1RMs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all Power 1 Rep Max for Entire Team — EF_GetPower1RMs","title":"Get all Power 1 Rep Max for Entire Team — EF_GetPower1RMs","text":"Get current Power","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetPower1RMs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all Power 1 Rep Max for Entire Team — EF_GetPower1RMs","text":"","code":"EF_GetPower1RMs(token)"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetPower1RMs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all Power 1 Rep Max for Entire Team — EF_GetPower1RMs","text":"token API Token Object (see EF_CreateAPIToken)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetPower1RMs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all Power 1 Rep Max for Entire Team — EF_GetPower1RMs","text":"Returns data frame following columns: Date `character` — Date lift (MM-DD-YYYY format) AthleteId `numeric` — Unique athlete identifier (long) LastName `character` — Athlete's last name FirstName `character` — Athlete's first name Exercise `character` — Name exercise performed AveragePower `numeric` — Average power output (Watts) PeakPower `numeric` — Peak power output (Watts)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetTeamsList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get List of Teams — EF_GetTeamsList","title":"Get List of Teams — EF_GetTeamsList","text":"Get team names IDs organization","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetTeamsList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get List of Teams — EF_GetTeamsList","text":"","code":"EF_GetTeamsList(token)"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetTeamsList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get List of Teams — EF_GetTeamsList","text":"token API Token Object (see EF_CreateAPIToken","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_GetTeamsList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get List of Teams — EF_GetTeamsList","text":"data frame following columns: TeamId `numeric` (long) — Team unique identifier Name `character` (string) — Team Name","code":""},{"path":[]},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_UpdateTokenTeam.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the Token Team Attribute — EF_UpdateTokenTeam","title":"Update the Token Team Attribute — EF_UpdateTokenTeam","text":"Update custom API Token select team pull remainder values Must saved token values ie token <- EF_UpdateTokenTeam(token, 1)","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_UpdateTokenTeam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the Token Team Attribute — EF_UpdateTokenTeam","text":"","code":"EF_UpdateTokenTeam(token, TEAM_ID)"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_UpdateTokenTeam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the Token Team Attribute — EF_UpdateTokenTeam","text":"token API Token Object (see EF_CreateAPIToken TEAM_ID Team Id referenced  EF_GetTeamsList","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_UpdateTokenTeam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the Token Team Attribute — EF_UpdateTokenTeam","text":"Custom API Token Object","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/EF_UpdateTokenTeam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update the Token Team Attribute — EF_UpdateTokenTeam","text":"","code":"#Intialize Token token <- EF_CreateAPIToken(\"https://your.eliteform.com\", \"your-api-key\")  # Get Team ID Team_list <- EF_GetTeamsList(token) #> Error in GET(url = paste0(token@url, \"/api/v1/getteamslist\"), add_headers(accept = \"application\",     `X-ApiKey` = token@api_key)): could not find function \"GET\"  # Update Token with Team ID token <- EF_UpdateTokenTeam(token, TEAM_ID$TeamId) #> Error: object 'TEAM_ID' not found"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/convert_to_MMddyyyy.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Date to EliteForm Format — convert_to_MMddyyyy","title":"Convert Date to EliteForm Format — convert_to_MMddyyyy","text":"Convert Date EliteForm Format","code":""},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/convert_to_MMddyyyy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Date to EliteForm Format — convert_to_MMddyyyy","text":"","code":"convert_to_MMddyyyy(date_str)"},{"path":"https://matthewleewilcox.github.io/eliteformR/reference/convert_to_MMddyyyy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Date to EliteForm Format — convert_to_MMddyyyy","text":"Returns date MMDDYYYY format","code":""}]
